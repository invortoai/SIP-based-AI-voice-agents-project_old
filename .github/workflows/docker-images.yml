name: Build and Push Docker Images

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        service: [api, realtime, webhooks, workers, telephony]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Derive image tags
        id: meta
        run: |
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/invorto-${{ matrix.service }}
          echo "image=${IMAGE}" >> $GITHUB_OUTPUT
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "tags=${IMAGE}:latest,${IMAGE}:${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF#refs/tags/}"
            echo "tags=${IMAGE}:${TAG}" >> $GITHUB_OUTPUT
          else
            echo "tags=${IMAGE}:sha-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: services/${{ matrix.service }}/Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            NODE_ENV=production